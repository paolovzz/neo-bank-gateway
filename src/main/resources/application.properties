###############################
#   SWAGGER UI   #
###############################
quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.security-schemes.jwt.type=HTTP
quarkus.smallrye-openapi.security-schemes.jwt.scheme=bearer
quarkus.smallrye-openapi.security-schemes.jwt.bearer-format=JWT
quarkus.swagger-ui.auth=true

quarkus.oidc.auth-server-url=http://keycloak:8180/realms/quarkus-app
mp.jwt.verify.issuer=http://keycloak:8180/realms/quarkus-app
mp.jwt.verify.publickey.location=http://keycloak:8180/realms/quarkus-app/protocol/openid-connect/certs

quarkus.http.auth.proactive=true

# Importante: per far riconoscere i ruoli da realm_access.roles
mp.jwt.roles.claim=realm_access.roles

# Abilita CORS globalmente
quarkus.http.cors.enabled=true

# Origine da cui accettare le richieste
quarkus.http.cors.origins=http://localhost:5173

# Metodi HTTP permessi (puoi specificare solo quelli che ti servono)
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS

# Headers ammessi
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with

# Se vuoi supportare lâ€™invio di cookie o auth header (opzionale)
quarkus.http.cors.access-control-allow-credentials=true

###############################
#   REST CLIENTS              #
###############################

%dev.quarkus.rest-client.auth-service.url=http://localhost:8080
quarkus.rest-client.auth-service.scope=jakarta.inject.Singleton

%dev.quarkus.rest-client.cliente-service.url=http://localhost:8080
quarkus.rest-client.cliente-service.scope=jakarta.inject.Singleton

%dev.quarkus.rest-client.conto-corrente-service.url=http://localhost:8080
quarkus.rest-client.conto-corrente-service.scope=jakarta.inject.Singleton

%dev.quarkus.rest-client.carta-service.url=http://localhost:8080
quarkus.rest-client.carta-service.scope=jakarta.inject.Singleton


# quarkus.log.category."io.quarkus.security".level=DEBUG
# quarkus.log.category."io.smallrye.jwt".level=DEBUG